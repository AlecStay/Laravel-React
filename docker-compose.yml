# Se recomienda eliminar la línea 'version' ya que es obsoleta en Docker Compose V2.
# Si usas Docker Compose V1, puedes mantenerla, pero si es Codespaces,
# probablemente usas V2 y se ignora.
# version: "3.8"

services:
  app:
    build:
      context: . # CORRECCIÓN: El contexto ahora es el directorio donde está docker-compose.yml (la raíz del proyecto)
      dockerfile: .devcontainer/Dockerfile
    container_name: laravel_app
    ports:
      - "8000:8000"
    volumes:
      # Asegúrate que ${localWorkspaceFolderBasename} se resuelva correctamente en Codespaces.
      # Si Laravel está en la raíz, el path debería ser /workspaces/${localWorkspaceFolderBasename}:/var/www
      # Si Laravel *realmente* está en un subdirectorio 'laravel' dentro de la raíz, entonces la ruta actual está bien.
      - /workspaces/${localWorkspaceFolderBasename}/laravel:/var/www
    depends_on:
      - postgres
    command: tail -f /dev/null
    networks:
      - laravel

  postgres:
    image: postgres:15-alpine
    container_name: laravel_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: laravel_db
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - laravel

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres
    networks:
      - laravel

  react-app:
    build:
      context: ./frontend # CORRECCIÓN: Apunta al subdirectorio 'frontend' dentro de la raíz del proyecto
      dockerfile: Dockerfile
    container_name: react_app
    ports:
      - "3000:3000"
    volumes:
      # Asegúrate que ${localWorkspaceFolderBasename} se resuelva correctamente en Codespaces.
      - /workspaces/${localWorkspaceFolderBasename}/frontend:/app
      - /app/node_modules # Esto asegura que node_modules se monte como un volumen anónimo, no sobrescribiendo el de la máquina host.
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - laravel

volumes:
  db_data:
    driver: local

networks:
  laravel: